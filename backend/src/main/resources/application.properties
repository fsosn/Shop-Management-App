api.orders.basepath=/api/orders
api.orders.create=/api/orders/create
api.orders.get=/api/orders/get
api.orders.update=/api/orders/update
api.orders.delete=/api/orders/delete

api.products.basepath=/api/products
api.products.create=/create
api.products.get=/get
api.products.get.all=/get/all
api.products.update=/update
api.products.delete=/delete

api.auth.basepath=/api/auth
api.auth.authenticate=/authenticate
api.auth.register=/register

host.frontend=http://localhost:3000
host.mobile=http://localhost:19006

frontend.successful-oauth=/oauth-successful-login
frontend.login=/login

spring.datasource.url=jdbc:postgresql://localhost:5432/store_db
spring.datasource.username=storeuser
spring.datasource.password=pswd
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile

SECRET_KEY=${KEY}
